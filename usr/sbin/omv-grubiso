#!/bin/bash

# shellcheck disable=SC1091,SC2086,SC2181

#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @author    OpenMediaVault Plugin Developers <plugins@omv-extras.org>
# @copyright Copyright (c) 2009-2013 Volker Theile
# @copyright Copyright (c) 2013-2021 OpenMediaVault Plugin Developers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault

arch="$(dpkg --print-architecture)"

if [[ "${arch}" == "amd64" ]]; then
  isoArch="amd64"
  paeArch="amd64"
elif [[ "${arch}" == "i386" ]]; then
  isoArch="i686"
  paeArch="i686-pae"
else
  echo "Unsupported architecture."
  exit 0
fi

OMV_SOURCEFORGE_URL=${OMV_SOURCEFORGE_URL:-"https://sourceforge.net/projects"}

ISO_PATH="/boot"
GRUB_CLONEZILLA="/etc/grub.d/42_clonezilla"
CLONEZILLA_VERSION="2.6.0-37"
CLONEZILLA_FILE="clonezilla-live-${CLONEZILLA_VERSION}-${paeArch}.iso"
CLONEZILLA_ISO="${ISO_PATH}/${CLONEZILLA_FILE}"
CLONEZILLA_URL="${OMV_SOURCEFORGE_URL}/clonezilla/files/clonezilla_live_stable/${CLONEZILLA_VERSION}/${CLONEZILLA_FILE}/download"
CLONEZILLA_CHECKSUM_i686="8c2d788b4ea0b8db015227e919bc989dabc10ed89f5f671b90d5b764eab13a37"
CLONEZILLA_CHECKSUM_amd64="5550e19d2f795b4063e6dd7aae8e2855c581d3b3264edd3e2c2b71f3a22a08b9"

GRUB_SYSRESCCD="/etc/grub.d/42_sysresccd"
SYSRESCCD_VERSION="8.01"
SYSRESCCD_FILE="systemrescue-${SYSRESCCD_VERSION}-${isoArch}.iso"
SYSRESCCD_ISO="${ISO_PATH}/${SYSRESCCD_FILE}"
SYSRESCCD_URL="${OMV_SOURCEFORGE_URL}/systemrescuecd/files/sysresccd-x86/${SYSRESCCD_VERSION}/${SYSRESCCD_FILE}/download"
SYSRESCCD_CHECKSUM_amd64="942fb74e8d36af9be5ceeb2b04c0ec19d8b716e50e72d08e1c09b676c006b4c7"
SYSRESCCD_CHECKSUM_i686="e93cdb95ae7a6f754567cb4b2838304d75190c801b808c794a4c6517011a9643"

GRUB_GPARTEDLIVE="/etc/grub.d/42_gpartedlive"
GPARTEDLIVE_VERSION="1.2.0-1"
GPARTEDLIVE_FILE="gparted-live-${GPARTEDLIVE_VERSION}-${isoArch}.iso"
GPARTEDLIVE_ISO="${ISO_PATH}/${GPARTEDLIVE_FILE}"
GPARTEDLIVE_URL="${OMV_SOURCEFORGE_URL}/gparted/files/gparted-live-stable/${GPARTEDLIVE_VERSION}/${GPARTEDLIVE_FILE}/download"
GPARTEDLIVE_CHECKSUM_amd64="0dcf1b76556875d5fde5b79410d397a2883c4985ea3dd0c9e0532ebe5a772cda"
GPARTEDLIVE_CHECKSUM_i686="674fbd37c0e2ec5b3f3b6d48fc1d1eca395f0bd8fdb14841a3b77af4085f400c"

GRUB="/etc/default/grub"
GRUB_CFG="/boot/grub/grub.cfg"

if [[ "${arch}" == "amd64" ]]; then
  CLONEZILLA_CHECKSUM="${CLONEZILLA_CHECKSUM_amd64}"
  GPARTEDLIVE_CHECKSUM="${GPARTEDLIVE_CHECKSUM_amd64}"
  SYSRESCCD_CHECKSUM="${SYSRESCCD_CHECKSUM_amd64}"
else
  CLONEZILLA_CHECKSUM="${CLONEZILLA_CHECKSUM_i686}"
  GPARTEDLIVE_CHECKSUM="${GPARTEDLIVE_CHECKSUM_i686}"
  SYSRESCCD_CHECKSUM="${SYSRESCCD_CHECKSUM_i686}"
fi

checkDNS()
{
  host="/usr/bin/host"
  hostDomain="$(echo ${OMV_SOURCEFORGE_URL} | sed -e 's/[^/]*\/\/\([^@]*@\)\?\([^:/]*\).*/\2/')"
  echo "Checking DNS with '${hostDomain}' ..."
  if [ -f "${host}" ]; then
    if ! ${host} ${hostDomain} > /dev/null; then
      echo "DNS error.  Exiting ..."
      exit 0
    else
      echo "DNS OK."
    fi
  fi
}

installclonezilla()
{
    checkDNS

    echo "Installing Clonezilla..."
    if [ ! -f "${CLONEZILLA_ISO}" ]; then
        rm -f ${ISO_PATH}/clonezilla*.iso
        wget "${CLONEZILLA_URL}" -O ${CLONEZILLA_ISO} 2>&1
        echo "Checking sha256sum..."
        echo "${CLONEZILLA_CHECKSUM} ${CLONEZILLA_ISO}" | sha256sum --check
        if [ $? -gt 0 ]; then
            echo "Checksum failed.  Deleting Clonezilla file and exiting..."
            rm -f ${CLONEZILLA_ISO}
            exit 10
        fi
    else
        echo "${CLONEZILLA_ISO} already exists.  Skipping download."
    fi
    echo "Creating GRUB entry..."
    cat <<EOF > ${GRUB_CLONEZILLA}
#!/bin/sh
exec tail -n +3 \$0
menuentry 'Clonezilla Live' {
  set isofile="${CLONEZILLA_ISO}"
  loopback loop \$isofile
  linux (loop)/live/vmlinuz boot=live live-config noswap edd=on nomodeset ocs_prerun="dhclient" ocs_live_run="ocs-live-general" ocs_live_extra_param="" keyboard-layouts=NONE ocs_live_batch="no" locales="en_US.UTF-8" ocs_daemonon="ssh" vga=788 nosplash toram=filesystem.squashfs findiso=\$isofile
  initrd (loop)/live/initrd.img
}
EOF

    chmod 755 ${GRUB_CLONEZILLA}
    update-grub
}

installsysresccd()
{
    checkDNS

    if [ ! -f "${SYSRESCCD_ISO}" ]; then
        rm -f ${ISO_PATH}/systemrescue*.iso
        wget "${SYSRESCCD_URL}" -O ${SYSRESCCD_ISO} 2>&1
        echo "Checking sha256sum..."
        echo "${SYSRESCCD_CHECKSUM} ${SYSRESCCD_ISO}" | sha256sum --check
        if [ $? -gt 0 ]; then
            echo "Checksum failed.  Deleting SystemRescue file and exiting..."
            rm -f ${SYSRESCCD_ISO}
            exit 11
        fi
    else
        echo "${SYSRESCCD_ISO} already exists.  Skipping download."
    fi
    echo "Creating GRUB entry..."
    cat <<EOF > ${GRUB_SYSRESCCD}
#!/bin/sh
exec tail -n +3 \$0
menuentry 'SystemRescue' {
  probe -u \$root --set=rootuuid
  set imgdevpath="/dev/disk/by-uuid/\$rootuuid"
  set isofile="${SYSRESCCD_ISO}"
  loopback loop \$isofile
  linux (loop)/sysresccd/boot/x86_64/vmlinuz rootpass=openmediavault nomodeset nofirewall archisobasedir=sysresccd copytoram setkmap=us img_dev=\$imgdevpath img_loop=\$isofile earlymodules=loop
  initrd (loop)/sysresccd/boot/intel_ucode.img (loop)/sysresccd/boot/amd_ucode.img (loop)/sysresccd/boot/x86_64/sysresccd.img
}
EOF
    chmod 755 ${GRUB_SYSRESCCD}
    update-grub
}

installgpartedlive()
{
    checkDNS

    if [ ! -f "${GPARTEDLIVE_ISO}" ]; then
        rm -f ${ISO_PATH}/gparted-live*.iso
        wget "${GPARTEDLIVE_URL}" -O ${GPARTEDLIVE_ISO} 2>&1
        echo "Checking sha256sum..."
        echo "${GPARTEDLIVE_CHECKSUM} ${GPARTEDLIVE_ISO}" | sha256sum --check
        if [ $? -gt 0 ]; then
            echo "Checksum failed.  Deleting GParted Live file and exiting..."
            rm -f ${GPARTEDLIVE_ISO}
            exit 12
        fi
    else
        echo "${GPARTEDLIVE_ISO} already exists.  Skipping download."
    fi
    echo "Creating GRUB entry..."
    cat <<EOF > ${GRUB_GPARTEDLIVE}
#!/bin/sh
exec tail -n +3 \$0
menuentry 'GParted Live' {
  set isofile="${GPARTEDLIVE_ISO}"
  loopback loop \$isofile
  linux (loop)/live/vmlinuz boot='live' union='overlay' username='user' config components noswap noeject toram='filesystem.squashfs' ip='' nosplash findiso=\$isofile
  initrd (loop)/live/initrd.img
}
EOF

    chmod 755 ${GRUB_GPARTEDLIVE}
    update-grub
}

rebootclonezilla()
{
    if [ ! -f "${CLONEZILLA_ISO}" ]; then
        echo "Please click on Install button."
    else
        DEFAULT=$(awk -F "=" '$1 == "GRUB_DEFAULT" { print $2 }' ${GRUB})

        disablesubmenu

        if grep -q 'submenu' ${GRUB_CFG}; then
            ENTRY=$(grep '^menuentry ' ${GRUB_CFG} | grep -n Clonezilla | cut -f1 -d:)
        else
            ENTRY=$(($(grep 'menuentry ' ${GRUB_CFG} | grep -n Clonezilla | cut -f1 -d:)-1))
        fi

        echo "Configuring grub to boot once from Clonezilla iso...  ${ENTRY}"

        perl -p -i -e "s/GRUB_DEFAULT=.*/GRUB_DEFAULT=saved/g" ${GRUB}
        grub-set-default ${DEFAULT}
        update-grub
        grub-reboot ${ENTRY}
    fi
}

rebootsysresccd()
{
    if [ ! -f "${SYSRESCCD_ISO}" ]; then
        echo "Please click on Install button."
    else
        DEFAULT=$(awk -F "=" '$1 == "GRUB_DEFAULT" { print $2 }' ${GRUB})

        disablesubmenu

        if grep -q 'submenu' ${GRUB_CFG}; then
            ENTRY=$(grep '^menuentry ' ${GRUB_CFG} | grep -n SystemRescue | cut -f1 -d:)
        else
            ENTRY=$(($(grep 'menuentry ' ${GRUB_CFG} | grep -n SystemRescue | cut -f1 -d:)-1))
        fi

        echo "Configuring grub to boot once from SystemRescue iso...  ${ENTRY}"

        perl -p -i -e "s/GRUB_DEFAULT=.*/GRUB_DEFAULT=saved/g" ${GRUB}
        grub-set-default ${DEFAULT}
        update-grub
        grub-reboot ${ENTRY}
    fi
}

rebootgpartedlive()
{
    if [ ! -f "${GPARTEDLIVE_ISO}" ]; then
        echo "Please click on Install button."
    else
        DEFAULT=$(awk -F "=" '$1 == "GRUB_DEFAULT" { print $2 }' ${GRUB})

        disablesubmenu

        if grep -q 'submenu' ${GRUB_CFG}; then
            ENTRY=$(grep '^menuentry ' ${GRUB_CFG} | grep -n GParted | cut -f1 -d:)
        else
            ENTRY=$(($(grep 'menuentry ' ${GRUB_CFG} | grep -n GParted | cut -f1 -d:)-1))
        fi

        echo "Configuring grub to boot once from GParted Live iso...  ${ENTRY}"

        perl -p -i -e "s/GRUB_DEFAULT=.*/GRUB_DEFAULT=saved/g" ${GRUB}
        grub-set-default ${DEFAULT}
        update-grub
        grub-reboot ${ENTRY}
    fi
}

disablesubmenu()
{
    if ! grep -q 'GRUB_DISABLE_SUBMENU' ${GRUB}; then
        echo "GRUB_DISABLE_SUBMENU=y" >> ${GRUB}
        update-grub
    fi
}

case $1 in
    disablesubmenu)
        disablesubmenu
    ;;

    installcz)
        installclonezilla
    ;;

    installgp)
        installgpartedlive
    ;;

    installsys)
        installsysresccd
    ;;

    rebootcz)
        rebootclonezilla
    ;;

    rebootgp)
        rebootgpartedlive
    ;;

    rebootsys)
        rebootsysresccd
    ;;
esac

echo "Done."

exit 0
